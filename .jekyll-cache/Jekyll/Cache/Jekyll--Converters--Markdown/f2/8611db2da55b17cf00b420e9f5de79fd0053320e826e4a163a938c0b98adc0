I"5<h2 id="切换远程地址">切换远程地址</h2>

<p>1.git 删除远程地址</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git remote rm origin
</code></pre></div></div>

<p>2.git 更换远程地址</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> git remote add origin http://10.00.3.260:10080/xxxxxx/sxxxy.git/
</code></pre></div></div>

<p>3.把当前分支与远程分支进行关联<strong>(branchname要改成你的当前分支名称)</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git push --set-upstream origin branchname
</code></pre></div></div>

<p>4.强制还原至远程分支一致</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git reset --hard origin/master
</code></pre></div></div>

<h2 id="生成ssh-key">生成ssh key</h2>

<h3 id="1设置git的user-name和email如果是第一次的话">1、设置Git的user name和email：(如果是第一次的话)</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git config --global user.name "humingx"
$ git config --global user.email "humingx@yeah.net" ### 2、生成密钥

$ ssh-keygen -t rsa -C "humingx@yeah.net" 连续3个回车。如果不需要密码的话。 最后得到了两个文件：id_rsa和id_rsa.pub。
</code></pre></div></div>

<h3 id="3添加密钥到ssh-agent">3、添加密钥到ssh-agent</h3>

<p>确保 ssh-agent 是可用的。ssh-agent是一种控制用来保存公钥身份验证所使用的私钥的程序，其实ssh-agent就是一个密钥管理器，运行ssh-agent以后，使用ssh-add将私钥交给ssh-agent保管，其他程序需要身份验证的时候可以将验证申请交给ssh-agent来完成整个认证过程。</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    # start the ssh-agent in the background
    eval "$(ssh-agent -s)"
    Agent pid 59566
</code></pre></div></div>

<p>添加生成的 SSH key 到 ssh-agent。
**    $ ssh-add ~/.ssh/id_rsa**</p>

<h3 id="clone">clone</h3>
<p>git clone http://邮箱(或用户名):密码@仓库</p>

<h3 id="保存密码">保存密码</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git config --global user.email "你的git的注册邮箱"
git config --global user.user"你的git用户名"
然后输入一次用户密码，再根据自己的需求执行下面的任意一条命令

3、长期存储密码：
git config --global credential.helper store


</code></pre></div></div>

<h2 id="子文件夹clone其他项目">子文件夹clone其他项目</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git rm --cached ./submodule_path # delete reference to submodule HEAD (no trailing slash)
git rm .gitmodules             # if you have more than one submodules,
                               # you need to edit this file instead of deleting!
rm -rf ./submodule_path/.git     # make sure you have backup!!
git add ./submodule_path         # will add files instead of commit reference
git commit -m "remove submodule"
</code></pre></div></div>

:ET